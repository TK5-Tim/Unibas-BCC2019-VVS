@startuml VVS_classes
class Vorsorge {
    address orgaFrom
    uint kundeSV
    String[] transDetails
    function changeOrga(adress _orgaFrom, uint _KundeSV, String[] _transDetails)
    function getInfo(uint _KundeSV)  public view returns(String[])
}
class OrgaChange {
    address orgaTo
    address orgaFrom
    uint kundeSV
    String[] transDetails
    function changeOrga(adress _orgaFrom, uint _KundeSV, String[] _transDetails)
    function selectOrga(address _orgaTo) returns view (address)
}
class Info {
    uint kundeSV
    function getInfo(uint _KundeSV) public view returns(String[])
    function searchInfo(uint KundeSV) public view returns(int)
}
class Identifikation {
    uint kundeSV
    function verifyID(uint _KundeSV) public view returns(bool)
}
class Hashing {
    String[] transDetails 
    address orgaTo
    address orgaFrom
    uint kundeSV 
    struct infos 
    function hashInfos(struct infos) public view returns(int)
    function dehashInfos(int hash) public view returns(struct)
}
Vorsorge --> OrgaChange : delegatecall
Vorsorge --> Info : delegatecall
OrgaChange --> Identifikation : call
Info --> Identifikation: call
Info --> Hashing: call
OrgaChange --> Hashing: call

@enduml
